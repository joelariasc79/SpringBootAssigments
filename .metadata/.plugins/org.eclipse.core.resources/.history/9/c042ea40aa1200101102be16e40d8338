package com.hotel.controller;

import java.time.format.DateTimeFormatter;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.hotel.domain.Hotels;
import com.hotel.service.HotelService;


@RestController

public class HotelController {

	@Autowired
	HotelService hotelService;
	
	@Autowired
    private ObjectMapper objectMapper; // Inject Jackson ObjectMapper
	
	@RequestMapping(value = "/AddHotel", method = RequestMethod.POST)
	public Hotels createHotel(@RequestBody Hotels hotel) {
		Hotels savedHotel = hotelService.saveHotels(hotel);
		
		// Create a JsonNode
        ObjectNode responseNode = objectMapper.createObjectNode();
        responseNode.put("id", savedHotel.getId());
        responseNode.put("hotelName", savedHotel.getHotelName());
        responseNode.put("address", savedHotel.getAddress());
        responseNode.put("contactDetails", savedHotel.getContactDetails());
        responseNode.put("email", savedHotel.getEmail());
        
        // Format the createdDate
        if (savedHotel.getCreatedDate() != null) {
            DateTimeFormatter formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
            responseNode.put("dateOfCreation", savedHotel.getCreatedDate().format(formatter));
        } else {
            responseNode.putNull("dateOfCreation");
        }
        
        // Create the UniqueId
        String uniqueId = String.format("HOTEL-%05d-%s",
                savedHotel.getId(),
                (savedHotel.getCreatedDate() != null ?
                        savedHotel.getCreatedDate().format(DateTimeFormatter.ofPattern("yyyyMMddHHmmss")) :
                        "N/A"));
        responseNode.put("UniqueId", uniqueId);
        
		
		return hotelService.saveHotels(hotel);
	}
	

}

